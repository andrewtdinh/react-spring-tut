{"ast":null,"code":"import _slicedToArray from \"/Users/andrewd/Personal/react-spring-tut/react-animations/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/andrewd/Personal/react-spring-tut/react-animations/src/Slider.jsx\";\n// Inpired by: https://codepen.io/popmotion/pen/xWrbNm?editors=0010\nimport React from 'react';\nimport { useSpring, animated, interpolate } from 'react-spring';\nimport { useGesture } from 'react-with-gesture';\nimport './Slider.css';\nexport default function Slider({\n  children\n}) {\n  const _useGesture = useGesture(),\n        _useGesture2 = _slicedToArray(_useGesture, 2),\n        bind = _useGesture2[0],\n        _useGesture2$ = _useGesture2[1],\n        delta = _useGesture2$.delta,\n        down = _useGesture2$.down;\n\n  const _useSpring = useSpring({\n    x: down ? delta[0] : 0,\n    bg: \"linear-gradient(120deg, \".concat(delta[0] < 0 ? '#f093fb 0%, #f5576c' : '#96fbc4 0%, #f9f586', \" 100%)\"),\n    size: down ? 1.1 : 1,\n    immediate: name => down && name === 'x'\n  }),\n        x = _useSpring.x,\n        bg = _useSpring.bg,\n        size = _useSpring.size;\n\n  const avSize = x.interpolate({\n    map: Math.abs,\n    range: [50, 300],\n    output: ['scale(0.5)', 'scale(1)'],\n    extrapolate: 'clamp'\n  });\n  return React.createElement(animated.div, Object.assign({}, bind(), {\n    class: \"item\",\n    style: {\n      background: bg\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }), React.createElement(animated.div, {\n    class: \"av\",\n    style: {\n      transform: avSize,\n      justifySelf: delta[0] < 0 ? 'end' : 'start'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }), React.createElement(animated.div, {\n    class: \"fg\",\n    style: {\n      transform: interpolate([x, size], (x, s) => \"translate3d(\".concat(x, \"px,0,0) scale(\").concat(s, \")\"))\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, children));\n}","map":{"version":3,"sources":["/Users/andrewd/Personal/react-spring-tut/react-animations/src/Slider.jsx"],"names":["React","useSpring","animated","interpolate","useGesture","Slider","children","bind","delta","down","x","bg","size","immediate","name","avSize","map","Math","abs","range","output","extrapolate","background","transform","justifySelf","s"],"mappings":";;AAAA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,EAA8BC,WAA9B,QAAiD,cAAjD;AACA,SAASC,UAAT,QAA2B,oBAA3B;AACA,OAAO,cAAP;AAEA,eAAe,SAASC,MAAT,CAAgB;AAAEC,EAAAA;AAAF,CAAhB,EAA8B;AAAA,sBACXF,UAAU,EADC;AAAA;AAAA,QACpCG,IADoC;AAAA;AAAA,QAC5BC,KAD4B,iBAC5BA,KAD4B;AAAA,QACrBC,IADqB,iBACrBA,IADqB;;AAAA,qBAEnBR,SAAS,CAAC;AAChCS,IAAAA,CAAC,EAAED,IAAI,GAAGD,KAAK,CAAC,CAAD,CAAR,GAAc,CADW;AAEhCG,IAAAA,EAAE,oCAA6BH,KAAK,CAAC,CAAD,CAAL,GAAW,CAAX,GAAe,qBAAf,GAAuC,qBAApE,WAF8B;AAGhCI,IAAAA,IAAI,EAAEH,IAAI,GAAG,GAAH,GAAS,CAHa;AAIhCI,IAAAA,SAAS,EAAEC,IAAI,IAAIL,IAAI,IAAIK,IAAI,KAAK;AAJJ,GAAD,CAFU;AAAA,QAEnCJ,CAFmC,cAEnCA,CAFmC;AAAA,QAEhCC,EAFgC,cAEhCA,EAFgC;AAAA,QAE5BC,IAF4B,cAE5BA,IAF4B;;AAQ3C,QAAMG,MAAM,GAAGL,CAAC,CAACP,WAAF,CAAc;AAAEa,IAAAA,GAAG,EAAEC,IAAI,CAACC,GAAZ;AAAiBC,IAAAA,KAAK,EAAE,CAAC,EAAD,EAAK,GAAL,CAAxB;AAAmCC,IAAAA,MAAM,EAAE,CAAC,YAAD,EAAe,UAAf,CAA3C;AAAuEC,IAAAA,WAAW,EAAE;AAApF,GAAd,CAAf;AACA,SACE,oBAAC,QAAD,CAAU,GAAV,oBAAkBd,IAAI,EAAtB;AAA0B,IAAA,KAAK,EAAC,MAAhC;AAAuC,IAAA,KAAK,EAAE;AAAEe,MAAAA,UAAU,EAAEX;AAAd,KAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACE,oBAAC,QAAD,CAAU,GAAV;AAAc,IAAA,KAAK,EAAC,IAApB;AAAyB,IAAA,KAAK,EAAE;AAAEY,MAAAA,SAAS,EAAER,MAAb;AAAqBS,MAAAA,WAAW,EAAEhB,KAAK,CAAC,CAAD,CAAL,GAAW,CAAX,GAAe,KAAf,GAAuB;AAAzD,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,QAAD,CAAU,GAAV;AAAc,IAAA,KAAK,EAAC,IAApB;AAAyB,IAAA,KAAK,EAAE;AAAEe,MAAAA,SAAS,EAAEpB,WAAW,CAAC,CAACO,CAAD,EAAIE,IAAJ,CAAD,EAAY,CAACF,CAAD,EAAIe,CAAJ,2BAAyBf,CAAzB,2BAA2Ce,CAA3C,MAAZ;AAAxB,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGnB,QADH,CAFF,CADF;AAQD","sourcesContent":["// Inpired by: https://codepen.io/popmotion/pen/xWrbNm?editors=0010\n\nimport React from 'react'\nimport { useSpring, animated, interpolate } from 'react-spring'\nimport { useGesture } from 'react-with-gesture'\nimport './Slider.css'\n\nexport default function Slider({ children }) {\n  const [bind, { delta, down }] = useGesture()\n  const { x, bg, size } = useSpring({\n    x: down ? delta[0] : 0,\n    bg: `linear-gradient(120deg, ${delta[0] < 0 ? '#f093fb 0%, #f5576c' : '#96fbc4 0%, #f9f586'} 100%)`,\n    size: down ? 1.1 : 1,\n    immediate: name => down && name === 'x'\n  })\n  const avSize = x.interpolate({ map: Math.abs, range: [50, 300], output: ['scale(0.5)', 'scale(1)'], extrapolate: 'clamp' })\n  return (\n    <animated.div {...bind()} class=\"item\" style={{ background: bg }}>\n      <animated.div class=\"av\" style={{ transform: avSize, justifySelf: delta[0] < 0 ? 'end' : 'start' }} />\n      <animated.div class=\"fg\" style={{ transform: interpolate([x, size], (x, s) => `translate3d(${x}px,0,0) scale(${s})`) }}>\n        {children}\n      </animated.div>\n    </animated.div>\n  )\n}"]},"metadata":{},"sourceType":"module"}